@charset "utf-8";

/* 스킵 네비게이션 */
#skip {position: relative;}
#skip a {
    position: absolute;
    left: 0; 
    top: -35px;
    width: 160px;
    border: 1px solid #fff;
    background: #333333;
    color: #fff; 
    text-align: center;
    line-height: 30px;  
    }
/* position = 위치를 내맘대로 옮길 수가 있다. 하지만 영역이 사라진다는 문제점이 있다. 둥둥 떠있는 느낌이 난다. -> left: 0, top: 0; 은 기본값이어서 주지 않아도 된다. */

#skip a:active,
#skip a:focus {top: 0;}
/* 스킵 네비게이션을 평소에 안보였다가, tab을 누르면 보이게 해줄껀데, 그 때 사용하는게 active, focus. -> 활성화, 포커스 (active까지 준 이유는 호환성 문제 때문, 예전 익스에서는 안되는 경우도 있었기 때문에.)*/
/* 평소에는 "top: -35px" 보이지 않다가 tab을 누르는 순간 "top: 0px"로 보이게 된다. */

/* 레이아웃 */
/* #wrap {width: 100%;} */
#header {
    width: 100%; 
    height: 325px; 
    background: url(../img/header_bg.jpg) center top repeat-x 
}
/* ../img/header_bg.jpg -> style.css가 있는 css폴더에서 밖으로 나가서 img폴더 안에 header_bg.jpg를 불러 온다. */
/* background: url(../img/header_bg.jpg) center top repeat-x /=> x 축으로 반복이 되게 하고, bg의 위치를 위에 고정하고 중앙으로 정렬이 되게 한다. */

/* #contents {width: 100%; height: 800px; background: #222222;} */
#footer {/*width: 100%; height: 200px; background: #333333; */ border-top: 1px solid #eee;}

/* 컨텐츠 레이아웃 */
#cont_nav {/*width: 100%; height: 200px; background: #333333;*/ 
    display: none;
    background: #f6fdff;
}
#cont_title {/*width: 100%; height: 200px; background: #444444;*/ background: #eaf7fd;}
#cont_banner {/*width: 100%; height: 200px; background: #555555;*/ background: #fffde7;}
#cont_content {/*width: 100%; height: 200px; background: #666666;*/ background: #f6fdff;}
/* 영역을 잡아줄 때는 항상 background를 이용해서 확실하게 잡혔는지 확인해 보는 것이 중요하다. */

/* 컨테이너 */
.container {margin: 0 auto; width: 990px; height: inherit; /* background: rgba(255,255,255,.3);*/ }
/* height: inherit;는 필요없지만 준 이유는 구조를 잡기 위해서 임의로 준 것. */

/* 헤더 */
.header .header-menu {text-align: right;}
.header .header-menu a {
    display: inline-block; 
    padding: 10px 0 10px 13px; 
    color: #fff;
}
/* inline태그는 padding, margin값이 좌우로만 먹힌다. 상하로는 먹히지 않는다. 먹히게 하는 방법은 display: inline-block */

.header .header-menu a:hover {color: #666666;}
.header .header-title {text-align: center;}
.header .header-title h1 {
    display: inline-block; 
    margin-top: 40px;
    padding: 5px 20px 6px 20px;  
    background-color: #ffc107; 
    color: #ffffff;
    font-size: 28px;  
    font-weight: normal; 
    text-transform: uppercase;
}
.header .header-title a {
    display: inline-block;
    margin-top: -5px;
    padding: 5px 20px 6px 20px;
    background: #ffb300;
    font-size: 18px;
    color: #ffffff;
}
/* a태그의 padding값을 주는 이유는 padding값을 넓히면 hover 효과의 범위를 넓게 할 수 있으며. 반응형일때는 정해진 값보다는 padding값으로 하면 더 편합니다. 
    a 태그의 width 값이 있어야 정렬이 가능하다. (text-align)
*/

.header .header-icon {margin-top: 30px; text-align: center;}
.header .header-icon a {
    display: inline-block; 
    margin: 0 3px;
    width: 60px; 
    height: 60px; 
    background: url(../img/icon.png);
}
/* 헤더 아이콘 이미지 스프라이트 */
.header .header-icon a.icon1 {background-position: 0 0;}
.header .header-icon a.icon2 {background-position: 0 -60px;}
.header .header-icon a.icon3 {background-position: 0 -120px;}
.header .header-icon a.icon4 {background-position: 0 -180px;}
.header .header-icon a.icon1:hover {background-position: -60px 0;}
.header .header-icon a.icon2:hover {background-position: -60px -60px;}
.header .header-icon a.icon3:hover {background-position: -60px -120px;}
.header .header-icon a.icon4:hover {background-position: -60px -180px;}

/* 전체 메뉴 */
.nav {/*float: left;*/ overflow: hidden; padding: 30px 0;}
/* float: left로 인한 영역깨짐 => "height: 0;"이 되어버린다.
    ★방지법★ 
    1. 깨지는 영역에 똑같이 "float: left"를 사용한다. 
        (추천x = 레이아웃이 쉬울때는 눈에 보여서 잡기 쉽지만, float:left를 사용하면 자식 박스들에게도 다 float:left를 적용해야 한다.)
    2. float의 성질을 차단하는 "clear: both;"
        (추천x = 나중에 복잡해지면 어떤 영역이 깨졌는지, 찾기가 어렵다.)
    3. float을 사용한 상위 박스(부모)에게 "overflow: hidden"을 사용한다.
        (추천o = 현재는 제일 많이 사용. "overflow: hidden" => 내가 지정한 영역 이외에는 안보이게 해준다. 이것을 쓰게 되면 영역이 잡히는 효과가 있다. "height: 0;"이 안된다. 
                2단 메뉴같은 것을 사용할때는 사용하지 못한다.)
    4. clearfix를 사용한다.
        (권장-> 제일 좋은 방법. 반응형 처리할때 좋다.)
*/      
/* .nav div {} = 자식의 후손의 후손까지. nav 밑에 div는 모두 다. */
.nav > div {float: left; width: 40%;} /* ">" 사용 시 = nav 바로 밑의 자식인 div만. */
.nav > div:last-child {width: 20%;} /* :last-child = ie9부터 사용 가능 / 전 버전에게 사용할 시 -> ".nav .last {width: 20%;}" */ 
.nav > div h3 {
    margin-bottom: 4px;
    font-size: 18px; 
    color: #25a2d0;
}
.nav > div ol {overflow: hidden;}
.nav > div ol li {float: left; width: 50%;}
.nav .last ol li {width: 100%;}
.nav > div ol li a:hover {font-weight: bold;}

/* 컨텐츠 타이틀 */
.title {position: relative;}
/* position: relative의 역할 3가지.
    1. 기준점 역할
    2.
    3.
*/
.title h2 {
    padding: 5px 0;
    text-align: center;
    letter-spacing: 2px;
    font-family: 'East Sea Dokdo', cursive;
    font-size: 40px;
    color: #feca28;
}
.title .btn {
    position: absolute;
    top: 5px;
    /* ★transform★ => ie10이상 지원
    top: 50%;
    transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%); 
    */ 
    right: 0;
    width: 60px;
    height: 60px;
    background: url(../img/icon.png) no-repeat 0 -600px;
} /*절대적인 위치로 이동이 되지만, 영역이 없어진다. 많이 사용하면 안좋고, 개발할때만 많이 쓴다. 지정한 영역에 들어가는지 확인을 위해. 반응형 처리할때는 왠만해선 사용하지 않는 것을 권장. */
.title .btn:hover {background-position: -60px -600px;}

.title .btn.on {background-position: 0 -660px;}
.title .btn:hover.on {background-position: -60px -660px;}

/* 컨텐츠 베너(슬릭x) ---------------------------------------------------------------------------------------------------------------------------------*/
/* .banner {
    position: relative;
    padding: 24px 0 26px;
} */
/* .banner > a {
    position: absolute;
    top: 60px; */
    /* top: 50%;
    transform: translateY(-50%);
    -webkit-transform:;
    -moz-transform:;
    -ms-transform:;
    -o-transform:; */
    /* width: 43px;
    height: 43px;
    background: url(../img/icon.png) no-repeat;
} */
/* .banner .prev {
    left: -100px;
    background-position: -150px 0;
}
.banner .prev:hover {
    background-position: -193px 0
}
.banner .next {
    right: -100px;
    background-position: -150px -43px;
}
.banner .next:hover {
    background-position: -193px -43px;
}

.banner ul {overflow: hidden;}
.banner ul li {
    float: left;
    width: 330px;
} */
/* .banner ul li img { */
    /*display: block;*/
    /* border: 4px solid #dcdcdc;
} */
/* <img>는 "inline-block" (멀티미디어 태그 video, audio도 inline-block)
    <img> 태그는 인라인 구조이며, border, border-radius, padding, margin, width, height 속성 값을 설정할 수 있습니다.
    text-align은 inline태그에만 적용이 되기 때문에 img가 block태그가 되어버리면 text-align이 안먹는다. */
/* .banner ul li img:hover {
    border-color: #98bcdc;
}
.banner ul li.banner_img1 {text-align: left;}
.banner ul li.banner_img2 {text-align: center;}
.banner ul li.banner_img3 {text-align: right;} */
/*  .banner ul li:nth-child(2) {text-align: center;}
    .banner ul li:last-child {text-align: right;}  => ie9이상 부터 사용 가능 -------------------------------------------------------------------------- */

/* 컨텐츠 배너(슬릭o) */
.banner {
    position: relative;
    padding: 24px 0 40px;
}
.banner .slick-arrow {
    position: absolute;
    top: 80px;
    width: 43px;
    height: 43px;
    text-indent: -9999px;
    background: url(../img/icon.png) no-repeat;
}
.banner .slick-prev {
    left: -100px;
    background-position: -150px 0;
}
.banner .slick-prev:hover {
    background-position: -193px 0;
    cursor: pointer;
}
.banner .slick-next {
    right: -100px;
    background-position: -150px -43px;
}
.banner .slick-next:hover {
    background-position: -193px -43px;
    cursor: pointer;
}

.banner img {
    /*display: block;*/
    border: 4px solid #dcdcdc;
} 
.banner img:hover {
    border-color: #98bcdc;
}
.banner .slick-slide {margin: 10px;}

.banner .slick-dots {
    display: block;
    position: absolute; 
    bottom: 15px ;
    width: 100%;
    text-align: center;
}
.banner .slick-dots li {
    margin: 5px;
    display: inline-block;
    width: 15px;
    height: 15px;
}
.banner .slick-dots li button {
    display: block;
    width: 15px;
    height: 15px;
    font-size: 0;
    line-height: 0;
    /* fz:0, lh:0 => text를 없애주기 위한 값 */
    cursor: pointer;
    background: #ffca28;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
}
.banner .slick-dots li.slick-active button {background: #ff9800;}



/* 컨텐츠 */
.content {
    overflow: hidden;
    /* margin-top: 30px; -> margin값을 주니까 배경색이랑 차이가 난다. */
    padding-top: 30px;
}
.content .column {
    position: relative;
    margin: 0 30px 30px 0; 
    padding-right: 30px;
    float:left; 
    width: 289px; 
    height: 363px;
}
.content .col1 {border-right: 1px solid #c8c8c8;}
.content .col2 {border-right: 1px solid #c8c8c8;}
.content .col3 {margin-right: 0; padding-right: 0;}
.content .col4 {border-right: 1px solid #c8c8c8;}
.content .col5 {border-right: 1px solid #c8c8c8;}
.content .col6 {margin-right: 0; padding-right: 0;} /* col3,6은 전체영역에서 넘쳐났기 때문에 개별적으로 해준다.*/

.content .column .icon_img {
    position: absolute;
    left: 0;
    top: 0;
    display: block; 
    width: 60px; 
    height: 60px;
    background: url(../img/icon.png) no-repeat;
}
.content .col1 .icon_img {background-position: 0 -240px;}
.content .col2 .icon_img {background-position: 0 -300px;}
.content .col3 .icon_img {background-position: 0 -360px;}
.content .col4 .icon_img {background-position: 0 -420px;}
.content .col5 .icon_img {background-position: 0 -480px;}
.content .col6 .icon_img {background-position: 0 -540px;}
.content .col1 .icon_img:hover {background-position: -60px -240px;}
.content .col2 .icon_img:hover {background-position: -60px -300px;}
.content .col3 .icon_img:hover {background-position: -60px -360px;}
.content .col4 .icon_img:hover {background-position: -60px -420px;}
.content .col5 .icon_img:hover {background-position: -60px -480px;}
.content .col6 .icon_img:hover {background-position: -60px -540px;}
.content .column .icon_title {
    padding-left: 70px;
    font-size: 16px;
    color: #feca28;
}
.content .column .icon_des {
    margin-bottom: 15px; /*게시판의 글을 띄우는데 개별로 다주는 비효율을 없애기 위해. 한번에 다 줄 수 있는 방법.*/
    padding-left: 70px;
    padding-bottom: 15px;
    border-bottom: 1px solid #d0d0d0 ;
}
/* 왼쪽의 이미지, 오른쪽에는 글씨가 있는 레이아웃 
    -> 왼쪽 반, 오른쪽 반해서 float:left로 영역을 잡아준 다음에 이미지 넣고, 글씨 넣고 해도 된다. 
    -> 장식용 이미지인 경우에 background로 넣었을 때는 이미지는 absolute로 따로 위치 잡아주고, 글자는 padding값을 줘서 따로 사용하면 된다.
        (absolute(절대값)을 사용하면 영역이 없어지니까 padding을 사용한다.)
*/

/* 게시판 유형 1 */
.notice {position: relative;}
.notice h4 {
    padding-bottom: 3px;
    font-size: 14px;
    font-weight: bold;
    color: #ffab41;
}
.notice ul li {
    padding-left: 8px;
    overflow: hidden;
    text-overflow: ellipsis; 
    white-space: nowrap;
    background: url(../img/dot.gif) no-repeat 0 8px;
    /* ★한줄효과★ 
        overflow: hidden;
        text-overflow: hidden; => 내가 지정한 영역 이외에는 "..."으로 바꿔주는 기능 
        white-space: nowrap; => 2줄 이상을 1줄로 바꿔주는 것. 
    */
} 
/* overflow: hidden; = 지정한 영역이외에는 보이지 않는다. 보이지만 않을뿐 영역 자체가 없어진 것은 아니다.
    float:left를 줄때 상위(부모) 박스에 overflow:hidden을 주는 이유는 영역을 잡는 효과가 생기기 때문에 주는 것이다. 
*/
.notice ul li a {font-size: 12px;}
.notice .more {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    width: 17px;
    height: 17px;
    background: url(../img/icon.png) no-repeat -150px -90px; 
}
.notice .more:hover {background-position: -167px -90px;}

/* 게시판 유형 2 */
.notice2 {
    position: relative;
    margin-top: 15px;
}
.notice2 h4 {
    padding-bottom: 3px ;
    font-size: 14px;
    font-weight: bold; 
    color: #ffab41;
}
.notice2 li {
    padding-left: 8px;
    overflow: hidden;
    background: url(../img/dot.gif) no-repeat 0 8px;
}
.notice2 li a {
    float: left;
    width: 65%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
/* float 은 블록 레이아웃의 사용을 뜻하기 때문에, 일부 경우에 display 값의 계산값을 수정합니다: 
inline => block
inline-block =>	block
inline-table =>	table
table-row => block
table-row-group => block
table-column =>	block
table-column-group => block
table-cell => block
table-caption => block
table-header-group => block
table-footer-group => block
flex =>	flex, 다만 float 은 이러한 요소에 효과가 없음
inline-flex => inline-flex, 다만 float 은 이러한 요소에 효과가 없음
그외 => 변화없음
*/
.notice2 li span {
    float: right;
    width: 30%;
    text-align: right;
}
.notice2 .more {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    width: 17px;
    height: 17px;
    background: url(../img/icon.png) no-repeat -150px -90px;
}
.notice2 .more:hover {background-position: -167px 90px;}

/* 게시판 유형 3 */
.notice3 {position: relative;}
.notice3 h4 {
    padding-bottom: 3px;
    font-size: 14px;
    font-weight: bold;
    color: #ffab41;
}
.notice3 li {
    position: relative;
    padding: 8px 0 14px 60px;
}
.notice3 li a img {
    position: absolute;
    top: 0;
    left: 0;
    width: 50px;
    border: 1px solid #ffab41;
}
.notice3 li a strong {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.notice3 li a span {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 12px;
}
.notice3 .more {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    width: 17px;
    height: 17px;
    background: url(../img/icon.png) no-repeat -150px -90px;
}
.notice3 .more:hover {background-position: -167px -90px;}

/* 로그인 박스 */
#login_wrap {
    margin-bottom: 15px;
    padding: 15px;
    background: #e7e7e7;
}
.login_header {
    overflow: hidden;
    height: 30px;
    font-size: 12px;
}
.login_header .lh_check {
    padding-right: 15px;
    float: left;
}
.login_header .lh_check .input_check {vertical-align: -2px;} /* 체크박스와 글자를 세로 정렬시키기 위한 것. */
.login_header .lh_ip {float: left;}
.login_header .lh_ip em {
    color: #ffab41;
    text-decoration: underline ;
}

.login_content {position: relative;}
.login_content .lc_text .input_text {
    padding: 2px 5px;
    border: 1px solid #bebebe;
    margin-bottom: 3px;
    width: 180px;
    height: 16px;
    background: #ffffff; /* 기본값이 들어가 있기 때문에 기본값을 없애려면 색상을 넣어주면 된다. */
}
.login_content .lc_btn {
    border: 1px solid #bebebe;
    position: absolute;
    top: 0;
    right: 0;
    width: 62px;
    height: 47px;
    background: #ffffff; /* 기본값이 들어가 있기 때문에 기본값을 없애려면 색상을 넣어주면 된다. */
}

.login_footer {margin-top: 5px;}
.login_footer li {display: inline;}
.login_footer li a {font-size: 12px;}

/* 팝업 박스 */
.popup h4 {
    padding-bottom: 4px;
    font-size: 14px;
    font-weight: 700;
    color: #ffab41;
}
.popup ul {overflow: hidden;}
.popup li {
    margin-right: 5px;
    float: left;
    width: 93px;
}
.popup li.last {margin-right: 0px;}
.popup li a img {width: 100%;}



/* 마우스 오버효과 1 */
.notice_hover h4 {
    padding-bottom: 3px;
    font-size: 14px;
    font-weight: bold;
    color: #ffab41;
}
.notice_hover ul {overflow: hidden;}
.notice_hover li {
    margin-right: 5px;
    float: left;
    width: 93px;
    text-align: center;
}
.notice_hover li.last {margin-right: 0;}
/* .notice_hover li:last-child {margin-right: 0;} */
.notice_hover li a span {
    position: relative;
    display: block;
    width: 93px;
    height: 93px;
    line-height: 93px;
}
.notice_hover li a span img {width: 100%;}
.notice_hover li a span em {
    visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,.7); /*rgba => ie9부터 적용, 모든 크로스 브라우저를 실행하려면 투명도가 있는 rgb로 설정하면 된다.*/
    color: #ffffff;
}
.notice_hover li a span:hover em {visibility: visible;}
.notice_hover li a strong {
    padding-top: 3px;
    display: inline-block;
    font-size: 12px;
}

/* 마우스 오버효과 2 */
.notice_hover2 ul {overflow: hidden;}
.notice_hover2 li {
    margin-right: 5px;
    float: left;
    width: 93px;
    text-align: center;
}
.notice_hover2 li.last {margin-right: 0;}
.notice_hover2 li a span {
    position: relative;
    display: block;
    width: 93px;
    height: 93px;
}
.notice_hover2 li a span img {width: 100%;}
.notice_hover2 li a span em {
    visibility: hidden;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    background: rgba(0,0,0,.7);
    color: #fff;
}
.notice_hover2 li a span:hover em {visibility: visible;}
.notice_hover2 li a strong {font-size: 12px;}

/* 컨텐츠 요소를 보이지 않게 하는 방법  
    1. display: none; (반대로는 display: block) -> 영역 자체를 없애준다. 
    2. visivility: hidden; (반대로는 visibilty: visible)  -> 컨텐츠는 사라지지만 영역은 존재한다 
    3. opacity : 0; (반대로는 opacity: 1;) -> 영역 유지
    4. width: 0; height: 0; overflow: hidden; -> 영역을 컨트롤 할 수 있다. (나타나게 할 수도 있고 없앨수도 있다.)
*/

/* 탭 메뉴 */
.tab_menu {
    position: relative;
    padding: 8px;
    height: 105px;
    border: 1px solid #ccc;
}
.tab_menu ul {
    overflow: hidden;
    border-bottom: 1px solid #ccc
}
.tab_menu ul li {
    float: left;
    border: 1px solid #ccc;
    margin-right: -1px;
    margin-bottom: -1px;
    /* margin-right: -1px;을 사용하는 경우는 두줄 효과를 한줄로 보이게 해주는 경우에 사용 */
}
.tab_menu ul li.active {background: #feca28;}
.tab_menu ul li a {
    display: block; 
    padding: 5px 10px;
}
.tab_menu ul li.active > a {color: #fff;}
.tab_menu ul li ul {
    position: absolute;
    top: 48px;
    left: 0;
    width: 270px;
    border: 0;
}
.tab_menu ul li ul li {
    float: none;
    padding-left: 18px;
    border: 0;
    background: url(../img/dot.gif) no-repeat 9px 8px;
}
.tab_menu ul li ul li a {
    padding: 0 0 3px 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* 게시판 유형 4 */
.notice4 {
    position: relative;
    border: 1px solid #ccc;
}
.notice4 h4 {
    padding: 8px 10px;
    border-bottom: 1px solid #ccc;    
    font-size: 14px;
    font-weight: 700;
    color: #ffab41;
}
.notice4 h4 em {color: #9c27b0;}
.notice4 ul {padding: 10px;}
.notice4 li {
    overflow: hidden;
    padding-left: 8px;
    padding-bottom: 2px;
    background: url(../img/dot.gif) no-repeat 0 8px;
}
.notice4 li a {
    float: left; 
    width: 65%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.notice4 li span {
    float: right;
    width: 30%;
    text-align: right;
}
.notice4 .more {
    position: absolute;
    top: 9px;
    right: 9px;
}

/* 갤러리 */
.gallery {
    position: relative;
    overflow: hidden;
    border: 1px solid #ccc;
    height: 255px;
}
.gallery h4 {
    border-bottom: 1px solid #ccc;
    padding: 10px 0 8px 11px;
    font-size: 14px;
    font-weight: bold;
    color: #ffab41;
    

}
.gallery .gallery_btn {
    position: absolute;
    top: 7px;
    right: 5px;
}
.gallery .gallery_btn ul {overflow: hidden;}
.gallery .gallery_btn li {
    margin: 1px 2px;
    float: left;
}
.gallery .gallery_btn li a {
    display: block;
    width: 23px;
    height: 23px;
    background: url(../img/icon.png) no-repeat;
}
.gallery .gallery_btn li.gb_icon1 a {background-position: -150px -120px;}
.gallery .gallery_btn li.gb_icon2 a {background-position: -150px -143px;}
.gallery .gallery_btn li.gb_icon3 a {background-position: -150px -166px;}
.gallery .gallery_btn li.gb_icon4 a {background-position: -150px -189px;}
.gallery .gallery_btn li.gb_icon1 a:hover {background-position: -173px -120px;}
.gallery .gallery_btn li.gb_icon2 a:hover {background-position: -173px -143px;}
.gallery .gallery_btn li.gb_icon3 a:hover {background-position: -173px -166px;}
.gallery .gallery_btn li.gb_icon4 a:hover {background-position: -173px -189px;}

.gallery .gallery_img img {width: 100%;} /* 이미지가 비율에 맟춰서 나오게 하기 위해서. */

/* 슬릭 갤러리 */
.gallery .gallery_btn button {
    margin: 1px 2px;
    float: left;
    display: block;
    width: 23px;
    height: 23px;
    background: url(../img/icon.png) no-repeat; 
}

.gallery .gallery_btn .gb_icon1 {background-position: -150px -120px;}
.gallery .gallery_btn .gb_icon2 {background-position: -150px -143px;}
.gallery .gallery_btn .gb_icon3 {background-position: -150px -166px;}
.gallery .gallery_btn .gb_icon4 {background-position: -150px -189px;}
.gallery .gallery_btn .gb_icon1:hover {background-position: -173px -120px;}
.gallery .gallery_btn .gb_icon2:hover {background-position: -173px -143px;}
.gallery .gallery_btn .gb_icon3:hover {background-position: -173px -166px;}
.gallery .gallery_btn .gb_icon4:hover {background-position: -173px -189px;}

/* 푸터 */
.footer {
    padding: 25px 0;
    text-align: center;
}
.footer ul {margin-bottom: 20px;}
.footer li {
    position: relative;
    padding: 0 7px 0 10px;
    display: inline;
}
/* float: left를 해도 되는데, display: inline;를 한 이유는 text-align: center가 float은 안먹히기 때문이다. */
.footer li:before {
    position: absolute;
    top: 2px;
    left: 0;
    content: '';
    width: 1px;
    height: 12px;
    background: #cccccc;
}
/* .footer li:before의 기준점은 before를 준 .footer li이다.  / ":before(가상선택자)" -> ie9부터 적용 된다. */
.footer li:first-child:before {
    width: 0px;
    height: 0px;
}
.footer .w3c {margin-top: 15px;}

/* 레이어 팝업 */
#layer {
    display: none;
    position: fixed;
    top: 50px;
    left: 50px;
    width: 700px;
    border: 10px solid #fffde7;
    box-shadow: 3px 3px 10px rgba(0,0,0,.4);
}

#layer img {
    display: block;
    width: 100%;
} /*사이의 공간이 뜨는데 img는 inline구조이기 때문에 그렇다. 사이 공간 뜨는 현상을 없애주기 위해 block구조로 변환해 준다. display: block을 줄 수 없는 상황이라면 height값을 주면 된다.*/

#layer .close {
    padding: 1px 6px;
    position: absolute;
    top: 20px;
    right: 20px;
    color: #ffffff;
    background: #ffab41;
}
#layer .close:hover {
    text-decoration: underline;
}